[{"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\index.js":"1","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\reportWebVitals.js":"2","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\StateProvider.js":"3","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\App.js":"4","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\reducer.js":"5","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\home\\Home.js":"6","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\footer\\Footer.js":"7","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\header\\Header.js":"8","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\register\\Register.js":"9","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\login\\Login.js":"10","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\logout\\Logout.js":"11","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\transfer\\Transfer.js":"12","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\deposit\\Deposit.js":"13","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\transfer\\AddRecipient.js":"14","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\withdraw\\Withdraw.js":"15","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\admin\\Admin.js":"16","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\admin\\UserMgmt.js":"17","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\user\\User.js":"18","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\price\\Price.js":"19","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\about\\About.js":"20","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\banner\\Banner.js":"21","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\product\\Product.js":"22","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\dashboardStyle.js":"23","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\typographyStyle.js":"24","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Card\\CardBody.js":"25","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Card\\CardIcon.js":"26","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Card\\CardFooter.js":"27","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Grid\\GridContainer.js":"28","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Card\\Card.js":"29","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Card\\CardHeader.js":"30","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Grid\\GridItem.js":"31","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\admin\\UserDetails.js":"32","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\menus\\UserMenu.js":"33","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\menus\\AdminMenu.js":"34","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\service\\bankService.js":"35","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\account\\AccountInfo.js":"36","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\account\\Transactions.js":"37","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\chart\\PlotlyChart.js":"38","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\colors.js":"39","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\cardHeaderStyle.js":"40","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\cardStyle.js":"41","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\cardFooterStyle.js":"42","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\cardIconStyle.js":"43","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\cardBodyStyle.js":"44","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\transfer\\Recipients.js":"45"},{"size":917,"mtime":1631452851447,"results":"46","hashOfConfig":"47"},{"size":375,"mtime":1623381123329,"results":"48","hashOfConfig":"47"},{"size":429,"mtime":1628956993565,"results":"49","hashOfConfig":"47"},{"size":1561,"mtime":1631463019119,"results":"50","hashOfConfig":"47"},{"size":499,"mtime":1628952847009,"results":"51","hashOfConfig":"47"},{"size":1364,"mtime":1625324934603,"results":"52","hashOfConfig":"47"},{"size":4569,"mtime":1625933408018,"results":"53","hashOfConfig":"47"},{"size":4654,"mtime":1629128935849,"results":"54","hashOfConfig":"47"},{"size":5320,"mtime":1628435332321,"results":"55","hashOfConfig":"47"},{"size":3258,"mtime":1631456437629,"results":"56","hashOfConfig":"47"},{"size":1046,"mtime":1630859380839,"results":"57","hashOfConfig":"47"},{"size":4295,"mtime":1631457076614,"results":"58","hashOfConfig":"47"},{"size":3528,"mtime":1631456774279,"results":"59","hashOfConfig":"47"},{"size":4769,"mtime":1630944521599,"results":"60","hashOfConfig":"47"},{"size":3095,"mtime":1630852335750,"results":"61","hashOfConfig":"47"},{"size":7543,"mtime":1630858582654,"results":"62","hashOfConfig":"47"},{"size":864,"mtime":1631463306106,"results":"63","hashOfConfig":"47"},{"size":7345,"mtime":1630858280785,"results":"64","hashOfConfig":"47"},{"size":4208,"mtime":1625933340672,"results":"65","hashOfConfig":"47"},{"size":2490,"mtime":1625933236752,"results":"66","hashOfConfig":"47"},{"size":1574,"mtime":1624114033475,"results":"67","hashOfConfig":"47"},{"size":485,"mtime":1624719724482,"results":"68","hashOfConfig":"47"},{"size":1896,"mtime":1630247003976,"results":"69","hashOfConfig":"47"},{"size":1059,"mtime":1630067707593,"results":"70","hashOfConfig":"47"},{"size":1016,"mtime":1630067707387,"results":"71","hashOfConfig":"47"},{"size":1044,"mtime":1630067707395,"results":"72","hashOfConfig":"47"},{"size":1176,"mtime":1630067707390,"results":"73","hashOfConfig":"47"},{"size":680,"mtime":1630067707400,"results":"74","hashOfConfig":"47"},{"size":1050,"mtime":1630067707381,"results":"75","hashOfConfig":"47"},{"size":1268,"mtime":1630067707393,"results":"76","hashOfConfig":"47"},{"size":644,"mtime":1630067707404,"results":"77","hashOfConfig":"47"},{"size":4262,"mtime":1631545587228,"results":"78","hashOfConfig":"47"},{"size":1846,"mtime":1629128835216,"results":"79","hashOfConfig":"47"},{"size":1371,"mtime":1631548542726,"results":"80","hashOfConfig":"47"},{"size":2098,"mtime":1631545049125,"results":"81","hashOfConfig":"47"},{"size":1801,"mtime":1630166994603,"results":"82","hashOfConfig":"47"},{"size":3333,"mtime":1630852667998,"results":"83","hashOfConfig":"47"},{"size":450,"mtime":1630854031456,"results":"84","hashOfConfig":"47"},{"size":6673,"mtime":1630067707587,"results":"85","hashOfConfig":"47"},{"size":3090,"mtime":1630067707569,"results":"86","hashOfConfig":"47"},{"size":811,"mtime":1630067707584,"results":"87","hashOfConfig":"47"},{"size":1074,"mtime":1630067707567,"results":"88","hashOfConfig":"47"},{"size":680,"mtime":1630067707572,"results":"89","hashOfConfig":"47"},{"size":315,"mtime":1630067707564,"results":"90","hashOfConfig":"47"},{"size":3213,"mtime":1630944421369,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rg3khg",{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\index.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\reportWebVitals.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\StateProvider.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\App.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\reducer.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\home\\Home.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\footer\\Footer.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\header\\Header.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\register\\Register.js",["189"],"import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { Button, LinearProgress } from \"@material-ui/core\";\r\nimport { TextField } from \"formik-material-ui\";\r\nimport * as Yup from \"yup\";\r\nimport service from \"../service/bankService\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./Register.css\";\r\n\r\ntoast.configure();\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  dob: \"\",\r\n  email: \"\",\r\n  username: \"\",\r\n  role: [\"user\"],\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  firstName: Yup.string().required(\"Please provide First Name\"),\r\n  lastName: Yup.string().required(\"Please provide Last Name\"),\r\n  dob: Yup.string().required(\"Please provide your Date of Birth\"),\r\n  email: Yup.string()\r\n    .email(\"Please provide Valid Email Address\")\r\n    .required(\"Please provide the Email Address\"),\r\n  username: Yup.string().required(\"Please provide User Name\"),\r\n  password: Yup.string().required(\"Please provide the password\"),\r\n  confirmPassword: Yup.string().oneOf(\r\n    [Yup.ref(\"password\"), null],\r\n    \"Password should match\"\r\n  ),\r\n});\r\n\r\nconst submitForm = (values, action) => {\r\n  service\r\n    .register(values)\r\n    .then((response) => {\r\n      if (response.status === 200 && response.data.success) {\r\n        toast.success(response.data.message, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n        action.resetForm();\r\n      } else {\r\n        toast.error(response.data.message, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(\"Error on submitting form \", e);\r\n    });\r\n  action.setSubmitting(false);\r\n};\r\nconst RegistrationForm = (props) => (\r\n  <div className=\"container\">\r\n    <fieldset>\r\n      <legend>Register</legend>\r\n      <Form>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-3 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              name=\"firstName\"\r\n              label=\"First Name\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              name=\"lastName\"\r\n              label=\"Last Name\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-3 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              name=\"dob\"\r\n              label=\"Date of Birth\"\r\n              type=\"date\"\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </div>\r\n          <div className=\"col-3 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-3 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              name=\"username\"\r\n              label=\"User Name\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3 text-center p-3\">\r\n            <div className=\"row text-center pl-5\" id=\"checkbox-group\">\r\n              Role\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-2\">\r\n                <label>\r\n                  <Field type=\"checkbox\" name=\"role\" value=\"user\" />\r\n                  User\r\n                </label>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <label>\r\n                  <Field type=\"checkbox\" name=\"role\" value=\"admin\" />\r\n                  Admin\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-3 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              name=\"confirmPassword\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">{props.isSubmitting && <LinearProgress />}</div>\r\n        <div className=\"row\">\r\n          <div className=\"col-6 p-3 text-center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={props.isSubmitting}\r\n              onClick={props.submitForm}\r\n              className=\"register__btn\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </fieldset>\r\n  </div>\r\n);\r\nconst Register = () => {\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={submitForm}\r\n        component={RegistrationForm}\r\n      ></Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\login\\Login.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\logout\\Logout.js",["190"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Logout.css\";\r\n\r\nconst Logout = () => {\r\n  const [{ userInfo }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const handleYes = () => {\r\n    localStorage.clear(\"auth\");\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n      item: null,\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n  const handleNo = () => {\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <div>\r\n      <fieldset>\r\n        <h1>Are you really want to logout ? </h1>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"button\"\r\n          onClick={handleYes}\r\n        >\r\n          Yes\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className=\"button\"\r\n          onClick={handleNo}\r\n        >\r\n          No\r\n        </Button>\r\n      </fieldset>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\transfer\\Transfer.js",["191","192","193","194","195"],"import React, { useState } from \"react\";\r\n\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { TextField as FormikTextField } from \"formik-material-ui\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport service from \"../service/bankService\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router\";\r\nimport AccountInfo from \"../account/AccountInfo\";\r\nimport Transactions from \"../account/Transactions\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as Yup from \"yup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"../styles/typographyStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst TransferSchema = Yup.object().shape({\r\n  recipientName: Yup.string().required(\"Required\"),\r\n  amount: Yup.string().required(\"Required\"),\r\n});\r\nlet classes;\r\nlet recipients;\r\n\r\nconst TransferForm = (props) => (\r\n  <div className=\"container\">\r\n    <fieldset>\r\n      <legend>Transfer</legend>\r\n      <Form>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-4 text-center p-3\">\r\n            <Autocomplete\r\n              className={classes.formControl}\r\n              id=\"recipient\"\r\n              name=\"recipientName\"\r\n              options={recipients}\r\n              getOptionLabel={(option) => option.name}\r\n              style={{ width: 300 }}\r\n              onChange={(e, value) => {\r\n                props.setFieldValue(\r\n                  \"recipientName\",\r\n                  value !== null ? value.name : \"\"\r\n                );\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField label=\"Recipient\" name=\"recipientName\" {...params} />\r\n              )}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4 text-center p-3\">\r\n            <Field\r\n              component={FormikTextField}\r\n              id=\"amount\"\r\n              name=\"amount\"\r\n              type=\"number\"\r\n              label=\"Amount\"\r\n            />\r\n          </div>\r\n          <div> {props.isSubmitting && <LinearProgress />}</div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-4 text-center p-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={props.isSubmitting}\r\n              onClick={props.submitForm}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </fieldset>\r\n  </div>\r\n);\r\n\r\nconst Transfer = () => {\r\n  const [{ userInfo }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  recipients = userInfo.user.recipients;\r\n  classes = useStyles();\r\n  return (\r\n    <div>\r\n      {!userInfo && history.push(\"/login\")}\r\n      {userInfo && userInfo.user && (\r\n        <div>\r\n          <AccountInfo />\r\n          <div>\r\n            <Formik\r\n              initialValues={{\r\n                recipientName: \"\",\r\n                amount: null,\r\n              }}\r\n              validationSchema={TransferSchema}\r\n              onSubmit={(values, actions) => {\r\n                service.transfer(values).then((response) => {\r\n                  if (response.status === 200) {\r\n                    const userInfoData = response.data;\r\n                    dispatch({\r\n                      type: \"UPDATE\",\r\n                      item: userInfoData,\r\n                    });\r\n                    toast.success(userInfoData.message, {\r\n                      position: toast.POSITION.TOP_CENTER,\r\n                    });\r\n                    actions.resetForm();\r\n                  }\r\n                });\r\n                actions.setSubmitting(false);\r\n              }}\r\n              component={TransferForm}\r\n            ></Formik>\r\n            <ToastContainer />\r\n          </div>\r\n          <Divider />\r\n          <h1 className={classes.infoText}>Transactions</h1>\r\n          <Transactions />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transfer;\r\n","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\deposit\\Deposit.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\transfer\\AddRecipient.js",["196"],"import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { Button, LinearProgress } from \"@material-ui/core\";\r\nimport { TextField } from \"formik-material-ui\";\r\nimport service from \"../service/bankService\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory } from \"react-router\";\r\nimport AccountInfo from \"../account/AccountInfo\";\r\nimport Recipients from \"./Recipients\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as Yup from \"yup\";\r\nimport styles from \"../styles/typographyStyle.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\ntoast.configure();\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst RecipientSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid Email\").required(\"Required\"),\r\n  phone: Yup.number()\r\n    .positive(\"Phone Number can't start with a minus\")\r\n    .integer(\"A phone number can't include a decimal point\")\r\n    .required(\"Required\"),\r\n  bankName: Yup.string().required(\"Required\"),\r\n  bankNumber: Yup.string().required(\"Required\"),\r\n});\r\n\r\nconst RecipientForm = (props) => (\r\n  <div>\r\n    <fieldset>\r\n      <legend>Add Recipient</legend>\r\n      <Form>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field component={TextField} name=\"name\" type=\"text\" label=\"Name\" />\r\n          </div>\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"number\"\r\n              label=\"Contact Number\"\r\n              name=\"phone\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"Bank Name\"\r\n              name=\"bankName\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Field\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"Bank Number\"\r\n              name=\"bankNumber\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2 text-center p-3\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={props.isSubmitting}\r\n              onClick={props.submitForm}\r\n              className=\"Recipient__btn\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-start\">\r\n          <div className=\"text-center p-3\">\r\n            {props.isSubmitting && <LinearProgress />}\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </fieldset>\r\n  </div>\r\n);\r\n\r\nconst AddRecipient = () => {\r\n  const [{ userInfo, recipients }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      {!userInfo && history.push(\"/login\")}\r\n      {userInfo && userInfo.user && (\r\n        <div>\r\n          <AccountInfo />\r\n          <div>\r\n            <Formik\r\n              initialValues={{\r\n                name: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                bankName: \"\",\r\n                bankNumber: \"\",\r\n              }}\r\n              validationSchema={RecipientSchema}\r\n              onSubmit={(values, actions) => {\r\n                service.addRecipient(values).then((response) => {\r\n                  if (response.status === 200) {\r\n                    if (response.data.success) {\r\n                      const userInfo = response.data;\r\n                      dispatch({ type: \"UPDATE\", item: userInfo });\r\n                      toast.success(userInfo.message, {\r\n                        position: toast.POSITION.TOP_CENTER,\r\n                      });\r\n                      actions.resetForm();\r\n                    }\r\n                  }\r\n                  actions.setSubmitting(false);\r\n                });\r\n              }}\r\n              component={RecipientForm}\r\n            ></Formik>\r\n            <ToastContainer />\r\n          </div>\r\n          <Divider />\r\n          <h1 className={classes.infoText}>Recipients</h1>\r\n          <Recipients />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRecipient;\r\n","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\withdraw\\Withdraw.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\admin\\Admin.js",["197"],"import React from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { useHistory } from \"react-router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\nimport AccountBalanceWallet from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport AccountBalance from \"@material-ui/icons/AccountBalance\";\r\nimport AttachMoney from \"@material-ui/icons/AttachMoney\";\r\nimport DateRange from \"@material-ui/icons/DateRange\";\r\nimport Update from \"@material-ui/icons/Update\";\r\nimport Accessibility from \"@material-ui/icons/Accessibility\";\r\n\r\nimport GridItem from \"../components/Grid/GridItem.js\";\r\nimport GridContainer from \"../components/Grid/GridContainer.js\";\r\nimport Card from \"../components/Card/Card.js\";\r\nimport CardHeader from \"../components/Card/CardHeader.js\";\r\nimport CardBody from \"../components/Card/CardBody.js\";\r\nimport CardIcon from \"../components/Card/CardIcon.js\";\r\nimport CardFooter from \"../components/Card/CardFooter.js\";\r\nimport PlotlyChart from \"../chart/PlotlyChart\";\r\nimport styles from \"../styles/dashboardStyle.js\";\r\nimport _ from \"lodash\";\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst Admin = () => {\r\n  const classes = useStyles();\r\n  const [{ userInfo }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const transactions = userInfo.user.transactions;\r\n  const uniqDates = _.uniq(_.map(transactions, \"date\")).sort();\r\n  const depositArray = [];\r\n  const withdrawalArray = [];\r\n  const transferArray = [];\r\n  uniqDates.forEach(function (key) {\r\n    const deposits = _.filter(transactions, function (transaction) {\r\n      return transaction.type === \"DEPOSIT\" && transaction.date === key;\r\n    });\r\n    const withdraws = _.filter(transactions, function (transaction) {\r\n      return transaction.type === \"WITHDRAW\" && transaction.date === key;\r\n    });\r\n\r\n    const transfers = _.filter(transactions, function (transaction) {\r\n      return transaction.isTransfer && transaction.date === key;\r\n    });\r\n    const depositAmounts = _.map(deposits, \"amount\");\r\n    const withdrawAmounts = _.map(withdraws, \"amount\");\r\n    const transferAmounts = _.map(transfers, \"amount\");\r\n\r\n    const sumOfDeposits = _.sum(depositAmounts);\r\n    const sumOfWithdraws = _.sum(withdrawAmounts);\r\n    const sumOfTransfers = _.sum(transferAmounts);\r\n\r\n    depositArray.push(sumOfDeposits);\r\n    withdrawalArray.push(sumOfWithdraws);\r\n\r\n    const transferObject = {\r\n      date: key.substring(0, 5),\r\n      amount: sumOfTransfers,\r\n    };\r\n    transferArray.push(transferObject);\r\n  });\r\n  const totalDeposit = _.sum(depositArray);\r\n  const totalWithdrawal = _.sum(withdrawalArray);\r\n  const orderedTransferArray = _.orderBy(transferArray, [\"amount\"]).reverse();\r\n  const depositData = [\r\n    {\r\n      type: \"bar\",\r\n      x: uniqDates,\r\n      y: depositArray,\r\n    },\r\n  ];\r\n  const withdrawalData = [\r\n    {\r\n      type: \"scatter\",\r\n      x: uniqDates,\r\n      y: withdrawalArray,\r\n    },\r\n  ];\r\n  const transferData = [\r\n    {\r\n      type: \"funnel\",\r\n      x: _.map(orderedTransferArray, \"amount\"),\r\n      y: _.map(orderedTransferArray, \"date\"),\r\n      hoverinfo: \"percent total+x\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      {!userInfo && history.push(\"/login\")}\r\n      {userInfo &&\r\n        userInfo.user &&\r\n        !userInfo.user.isAdmin &&\r\n        history.push(\"/login\")}\r\n      {userInfo && userInfo.user && userInfo.user.isAdmin && (\r\n        <div>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardHeader color=\"warning\" stats icon>\r\n                  <CardIcon color=\"warning\">\r\n                    <AccountBalance />\r\n                  </CardIcon>\r\n                  <p className={classes.cardCategory}>Total Balance</p>\r\n                  <h3 className={classes.cardTitle}>\r\n                    $ {userInfo.user.totalBalance}\r\n                  </h3>\r\n                </CardHeader>\r\n                <CardFooter stats>\r\n                  <div className={classes.stats}>\r\n                    <Update />\r\n                    Just Updated\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardHeader color=\"success\" stats icon>\r\n                  <CardIcon color=\"success\">\r\n                    <AttachMoney />\r\n                  </CardIcon>\r\n                  <p className={classes.cardCategory}>Total Deposits</p>\r\n                  <h3 className={classes.cardTitle}>$ {totalDeposit}</h3>\r\n                </CardHeader>\r\n                <CardFooter stats>\r\n                  <div className={classes.stats}>\r\n                    <DateRange />\r\n                    Last 1 Week\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardHeader color=\"danger\" stats icon>\r\n                  <CardIcon color=\"danger\">\r\n                    <AccountBalanceWallet />\r\n                  </CardIcon>\r\n                  <p className={classes.cardCategory}>Total Withdrawals</p>\r\n                  <h3 className={classes.cardTitle}>$ {totalWithdrawal}</h3>\r\n                </CardHeader>\r\n                <CardFooter stats>\r\n                  <div className={classes.stats}>\r\n                    <DateRange />\r\n                    Last 1 Week\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardHeader color=\"info\" stats icon>\r\n                  <CardIcon color=\"info\">\r\n                    <Accessibility />\r\n                  </CardIcon>\r\n                  <p className={classes.cardCategory}>Total Users</p>\r\n                  <h3 className={classes.cardTitle}>\r\n                    {userInfo.user.totalUsers}\r\n                  </h3>\r\n                </CardHeader>\r\n                <CardFooter stats>\r\n                  <div className={classes.stats}>\r\n                    <Update />\r\n                    Latest\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card chart>\r\n                <CardHeader color=\"success\">\r\n                  <h4 color=\"white\">Total Deposit Trends</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <PlotlyChart data={depositData} />\r\n                </CardBody>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card chart>\r\n                <CardHeader color=\"danger\">\r\n                  <h4 color=\"white\">Total Withdrawal Trends</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <PlotlyChart data={withdrawalData} />\r\n                </CardBody>\r\n              </Card>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={4}>\r\n              <Card chart>\r\n                <CardHeader color=\"info\">\r\n                  <h4 color=\"white\">Total Transfer Trends</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <PlotlyChart data={transferData} />\r\n                </CardBody>\r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\admin\\UserMgmt.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\user\\User.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\price\\Price.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\about\\About.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\banner\\Banner.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\product\\Product.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\dashboardStyle.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\typographyStyle.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Card\\CardBody.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Card\\CardIcon.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Card\\CardFooter.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Grid\\GridContainer.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Card\\Card.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Card\\CardHeader.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\components\\Grid\\GridItem.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\admin\\UserDetails.js",["198"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport styles from \"../styles/dashboardStyle.js\";\r\nimport bankService from \"../service/bankService\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nconst useStyles = makeStyles(styles);\r\n\r\ntoast.configure();\r\n\r\nlet rows = [];\r\nconst columns = [\r\n  { id: \"firstName\", label: \"First Name\", align: \"center\" },\r\n  { id: \"lastName\", label: \"Last Name\", align: \"center\" },\r\n  { id: \"email\", label: \"Email\", align: \"center\" },\r\n];\r\n\r\nconst UserDetails = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  rows = props.users;\r\n  const history = useHistory();\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const deleteStyle = { cursor: \"pointer\", color: \"brown\" };\r\n\r\n  const handleDelete = (id) => {\r\n    bankService.deleteUser(id).then((response) => {\r\n      if (response && response.status === 200) {\r\n        toast.success(\"User has been deleted successfully\", {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n        history.push(\"/userMgmt\");\r\n      } else {\r\n        toast.success(\"Sorry ! , Unable to Delete the User\", {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <fieldset>\r\n        <legend>\r\n          <h1 className={classes.successText}>User Details</h1>\r\n        </legend>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => {\r\n                  return (\r\n                    <TableRow hover tabIndex={-1} key={row.userId}>\r\n                      {columns.map((column) => {\r\n                        const value = row[column.id];\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            {value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                      <TableCell>\r\n                        <DeleteIcon\r\n                          style={deleteStyle}\r\n                          onClick={() => handleDelete(row.userId)}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n        <ToastContainer />\r\n      </fieldset>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\menus\\UserMenu.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\menus\\AdminMenu.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\service\\bankService.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\account\\AccountInfo.js",["199"],"import React from \"react\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//Icons\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport AccountBalance from \"@material-ui/icons/AccountBalance\";\r\n\r\nimport GridItem from \"../components/Grid/GridItem.js\";\r\nimport GridContainer from \"../components/Grid/GridContainer.js\";\r\nimport Card from \"../components/Card/Card.js\";\r\nimport CardHeader from \"../components/Card/CardHeader.js\";\r\nimport CardIcon from \"../components/Card/CardIcon.js\";\r\n\r\nimport styles from \"../styles/dashboardStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst AccountInfo = () => {\r\n  const [{ userInfo }, dispatch] = useStateValue();\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={6}>\r\n          <Card>\r\n            <CardHeader color=\"info\" icon>\r\n              <CardIcon color=\"info\">\r\n                <AccountBalance />\r\n              </CardIcon>\r\n            </CardHeader>\r\n            <p className={classes.cardCategory}>Account Number</p>\r\n            <h3 className={classes.cardTitle}>{userInfo.user.accountNumber}</h3>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={6}>\r\n          <Card>\r\n            <CardHeader color=\"success\" icon>\r\n              <CardIcon color=\"success\">\r\n                <AccountBalanceWalletIcon />\r\n              </CardIcon>\r\n            </CardHeader>\r\n            <p className={classes.cardCategory}>Balance</p>\r\n            <h3 className={classes.cardTitle}>\r\n              {userInfo.user.accountBalance}\r\n            </h3>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountInfo;\r\n","D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\account\\Transactions.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\chart\\PlotlyChart.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\colors.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\cardHeaderStyle.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\cardStyle.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\cardFooterStyle.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\cardIconStyle.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\styles\\cardBodyStyle.js",[],"D:\\Personal\\TechPro\\MTD-Bank\\Riyaz\\UI\\mtd-frontend\\src\\transfer\\Recipients.js",[],{"ruleId":"200","severity":1,"message":"201","line":7,"column":10,"nodeType":"202","messageId":"203","endLine":7,"endColumn":24},{"ruleId":"200","severity":1,"message":"204","line":8,"column":12,"nodeType":"202","messageId":"203","endLine":8,"endColumn":20},{"ruleId":"200","severity":1,"message":"205","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"206","line":5,"column":3,"nodeType":"202","messageId":"203","endLine":5,"endColumn":14},{"ruleId":"200","severity":1,"message":"207","line":6,"column":3,"nodeType":"202","messageId":"203","endLine":6,"endColumn":13},{"ruleId":"200","severity":1,"message":"208","line":7,"column":3,"nodeType":"202","messageId":"203","endLine":7,"endColumn":9},{"ruleId":"200","severity":1,"message":"209","line":8,"column":3,"nodeType":"202","messageId":"203","endLine":8,"endColumn":11},{"ruleId":"200","severity":1,"message":"210","line":99,"column":22,"nodeType":"202","messageId":"203","endLine":99,"endColumn":32},{"ruleId":"200","severity":1,"message":"211","line":27,"column":24,"nodeType":"202","messageId":"203","endLine":27,"endColumn":32},{"ruleId":"200","severity":1,"message":"212","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":16},{"ruleId":"200","severity":1,"message":"211","line":20,"column":24,"nodeType":"202","messageId":"203","endLine":20,"endColumn":32},"no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'userInfo' is assigned a value but never used.","'useState' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'recipients' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Button' is defined but never used."]